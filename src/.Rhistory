legend("bottomright",lty=c(1,2,NA),pch=c(NA,NA,1),lwd=c(2,2,NA),
col=c("black","red","black","black"),
legend=c("Reference","Prediction","Sample"),bty="n",cex=0.8)
legend("topleft",legend="a",bty="n")
plot(newdat$x, mindist,type="l",xlab="Predictor",ylab="Applicability index",lwd=2)
legend("topright",legend="b",bty="n")
trainDist_avrgmean
mindist
1/2.3
3.3/2.3
-3.3/2.3
20-7
13/2.33
getwd()
rm(list=ls())
#install_github("HannaMeyer/CAST")
library(CAST)
library(knitr)
library(scatterplot3d)
library(ggplot2)
set.seed(15)
samples <- data.frame("a"=sample(1:50,30,replace=T), #1:50,30
"b"=sample(11:20,30,replace=T), #11:20,30
"c"=sample(12:16,30,replace=T)) #12:16,30
samples <- scale(samples[,1:3])
scaleparam <- attributes(samples)
samples<- data.frame(rbind(samples,
scale(data.frame("a"=-28,"b"=12,"c"=14),
center=scaleparam$`scaled:center`,
scale=scaleparam$`scaled:scale`)
))
samples$type=as.character(c(rep("training",30),"new"))
minvalues <- apply(samples[1:30,1:3],2,function(x){min(x,na.rm=TRUE)})
maxvalues <- apply(samples[1:30,1:3],2,function(x){max(x,na.rm=TRUE)})
maxdist <- dist(rbind(maxvalues,minvalues))
tmp <- NA
for (i in 1:nrow(samples[1:30,1:3])){
mindist <- dist(rbind(samples[31,1:3],samples[i,1:3]))
mindist <- pmin(mindist,tmp,na.rm=T)
if(i>1&&mindist<tmp){
whichIsMin <- i
}
tmp <- mindist
}
print(mindist)
colors <- c("grey", "black")
colors <- colors[as.numeric(factor(samples$type))]
pchs <- c(16,4)
pchs <- pchs[as.numeric(factor(samples$type))]
cairo_pdf("figures/3dscatter.pdf",width=7,height = 7)
plt <- scatterplot3d(samples[,1:3], pch = pchs,
grid=TRUE,lwd=2,cex.symbols = 1.1)
dev.off()
dev.off()
cairo_pdf("../figures/3dscatter.pdf",width=7,height = 7)
plt <- scatterplot3d(samples[,1:3], pch = pchs,
grid=TRUE,lwd=2,cex.symbols = 1.1)
tmp <- lapply(1:30,FUN=function(t){
plt$points3d(x=c(samples[t,1],samples[31,1]),
y=c(samples[t,2],samples[31,2]),
z=c(samples[t,3],samples[31,3]),
type="l", col="grey", lwd=1,lty=1)
})
plt$points3d(x=c(samples[whichIsMin,1],samples[31,1]),
y=c(samples[whichIsMin,2],samples[31,2]),
z=c(samples[whichIsMin,3],samples[31,3]),
type="l", col="black", lwd=2,lty=1)
attributes(mindist)$Labels[2]
plt$points3d(samples[,1:3], pch = pchs,
lwd=2)
plt$box3d()
legend("topleft",pch=c(4,16,NA,NA),lty=c(NA,NA,1,1),
lwd=c(NA,NA,2,1),
col=c("black","black","black","grey"),
legend=c("training","new","minimum distance","distances"),bty="n",cex=0.9)
dev.off()
uncert <- aoa(samples[1:30,],samples[31,],variables=c("a","b","c"))
print(attributes(uncert))
print(uncert$AOAI)
print(uncert$AOA)
cat(paste0("average mean distance in the training data = ",round(attributes(uncert)$aoa_stats$AvrgMean_train,3),
", \ndAverage min distance in the training data = ",round(attributes(uncert)$aoa_stats$AvrgMin_train,3),
", \ndSD of min distance in the training data = ",round(attributes(uncert)$aoa_stats$SdMin_train,3),
", \nthreshold = ",round(attributes(uncert)$aoa_stats$threshold,3),
", \ndistance to nearest training point = ",round(mindist,3),
", \nAOAI for the new data point = ",round(unlist(uncert$AOAI),3)))
reference  <- c(1:7, 7.8, 8.3, 8.7, 8.9, 9,rep(9.1,8))
train <- data.frame("x"=c(1:6),"y"=reference[1:6])
newdat <- data.frame("x"=1:20)
tmp <- NA
for (i in 1:nrow(train)){
mindist <- apply(newdat,1,function(x){dist(rbind(x,train[i,1]))})
mindist <- pmin(mindist,tmp,na.rm=T)
tmp <- mindist
}
trainDist <- as.matrix(dist(train$x))
diag(trainDist) <- NA
trainDist_min <- apply(trainDist,1,FUN=function(x){min(x,na.rm=T)})
trainDist_mean <- apply(trainDist,1,FUN=function(x){mean(x,na.rm=T)})
trainDist_avrgmean <- mean(trainDist_mean)
mindist <- -mindist/trainDist_avrgmean
predictions <- reference
predictions[nrow(train):length(predictions)]<- train$y[nrow(train)]
pdf("../figures/concept_relationship.pdf",width=10,height=5)
par(mar=c(4,4,1,1),mfrow=c(1,2))
plot(newdat$x,reference,type="l",lty=1,
xlab="Predictor",ylab="Response",lwd=2)
lines(predictions,lty=2,lwd=2,col="red")
points(train$x,train$y)
legend("bottomright",lty=c(1,2,NA),pch=c(NA,NA,1),lwd=c(2,2,NA),
col=c("black","red","black","black"),
legend=c("Reference","Prediction","Sample"),bty="n",cex=0.8)
legend("topleft",legend="a",bty="n")
plot(newdat$x, mindist,type="l",xlab="Predictor",ylab="Applicability index",lwd=2)
legend("topright",legend="b",bty="n")
dev.off()
rm(list=ls())
#install_github("HannaMeyer/CAST")
library(virtualspecies)
library(caret)
library(CAST)
library(viridis)
library(gridExtra)
library(parallel)
library(knitr)
library(grid)
library(latticeExtra)
library(hydroGOF)
npoints <- 50 # number of training samples
clustered <- FALSE #TRUE clustered design
nlusters <- 25 #number of clusters if design=clustered
maxdist <- 0.7 #maxdist for clustered samples if design=clustered
meansPCA <- c(3, -1) # means of the gaussian response functions to the 2 axes
sdPCA <- c(2, 2) # sd's of the gaussian response functions to the 2 axes
simulateResponse <- c("bio2","bio5","bio10", "bio13","bio14","bio19") # variables used to simulate the response
studyarea <- c(-15, 65, 30, 75) # extent of study area. Default: Europe
seed <- 10
predictors_global <- getData('worldclim', var='bio', res=10, path='../data/')
wp <- extent(studyarea)
predictors <- crop(predictors_global,wp)
mask <- predictors[[1]]
values(mask)[!is.na(values(mask))] <- 1
response <- generateSpFromPCA(predictors[[simulateResponse]],
means = c(1,2),sds = c(1,1), plot=F)$suitab.raster
spplot(response)
response <- generateSpFromPCA(predictors[[simulateResponse]],
means = c(1,2),sds = c(0,0), plot=F)$suitab.raster
spplot(response)
response <- generateSpFromPCA(predictors[[simulateResponse]],
means = c(1,2),sds = c(1,1), plot=F)$suitab.raster
spplot(response)
rm(list=ls())
library(ggplot2)
library(reshape2)
dat <- get(load("../data/resultsTable.RData"))
means=as.data.frame(matrix(unlist(dat$meansPCA),ncol=2,byrow = T))
sds=as.data.frame(matrix(unlist(dat$sdPCA),ncol=2,byrow = T))
caseStudy <- dat[dat$npoints==50&dat$seed==10&
sds[,1]==2&sds[,2]==2&
means[,1]==3&means[,2]==-1,]
pdf("figures/comparison_modelRuns_box.pdf",width=12,height=7)
par(mfrow=c(1,2),mar=c(7,3,1,1))
boxplot(dat$model_RMSE,dat$PredError_RMSE,
dat$`PredErrorAOA_RMSE`,
dat$`PredErrorNOTAOA_RMSE`,
names=c("CV RMSE","RMSE all", "RMSE AOA",
"RMSE !AOA"),las=2,notch=T)
boxplot(dat$model_R2,dat$PredError_R2,
dat$`PredErrorAOA_R2`,
dat$`PredErrorNOTAOA_R2`,
names=c("CV R2","R2 all", "R2 AOA",
"R2 !AOA"),las=2,notch=T)
dev.off()
pdf("figures/comparison_modelRuns_scatter.pdf",width=7,height=3.5)
par(mfrow=c(1,2))
#lim <- c(min(c(dat$model_RMSE,dat$PredError_RMSE)),
#  max(c(dat$model_RMSE,dat$PredError_RMSE)))
#plot(dat$model_RMSE~dat$PredError_RMSE,
#     xlim=lim,ylim=lim,
#     xlab="RMSE prediction (entire study area)",ylab="RMSE model CV")
#points(caseStudy$model_RMSE~caseStudy$PredError_RMSE,col="red",pch=16)
#abline(0,1)
#legend("topleft",legend="a",bty="n")
lim <- c(min(c(dat$model_RMSE,dat$`PredErrorAOA_RMSE`)),
max(c(dat$model_RMSE,dat$`PredErrorAOA_RMSE`)))
plot(dat$model_RMSE~dat$`PredErrorAOA_RMSE`,
xlim=lim,ylim=lim,
xlab="RMSE prediction (AOA)",ylab="RMSE model CV"
#,main="AOA"
)
points(caseStudy$model_RMSE~caseStudy$`PredErrorAOA_RMSE`,col="red",pch=16)
legend("topleft",legend="a",bty="n")
abline(0,1)
lim <- c(min(c(dat$model_RMSE,dat$`PredErrorNOTAOA_RMSE`),na.rm=T),
max(c(dat$model_RMSE,dat$`PredErrorNOTAOA_RMSE`),na.rm=T))
plot(dat$model_RMSE~dat$`PredErrorNOTAOA_RMSE`,
xlim=lim,ylim=lim,
xlab="RMSE prediction (outside AOA)",ylab="RMSE model CV"
#,main="Outside AOA"
)
points(caseStudy$model_RMSE~caseStudy$`PredErrorNOTAOA_RMSE`,col="red",pch=16)
legend("topleft",legend="b",bty="n")
abline(0,1)
#mtext("How well does the model CV error reflect the true error within and outside of the AOA?",
#      side = 3, line = -1.5, outer = TRUE)
dev.off()
#
# pdf("comparison_thresholds.pdf",width=12,height=5)
# par(mfrow=c(1,3))
# lim <- c(min(c(dat$model_RMSE,dat$`PredErrorAOA_RMSE_80%`)),
#          max(c(dat$model_RMSE,dat$`PredErrorAOA_RMSE_80%`)))
# plot(dat$model_RMSE~dat$`PredErrorAOA_RMSE_80%`,
#      xlim=lim,ylim=lim,
#      xlab="RMSE Prediction (AOA)",ylab="model CV error",
#      main="80%")
# legend("topleft",
#        legend=paste0("ME= ",round(mean(dat$model_RMSE-dat$`PredErrorAOA_RMSE_80%`),4)),bty="n")
# abline(0,1)
# lim <- c(min(c(dat$model_RMSE,dat$`PredErrorAOA_RMSE_90%`)),
#          max(c(dat$model_RMSE,dat$`PredErrorAOA_RMSE_90%`)))
# plot(dat$model_RMSE~dat$`PredErrorAOA_RMSE_90%`,
#      xlim=lim,ylim=lim,
#      xlab="RMSE Prediction (AOA)",ylab="model CV error",
#      main="90%")
# legend("topleft",
#        legend=paste0("ME= ",round(mean(dat$model_RMSE-dat$`PredErrorAOA_RMSE_90%`),4)),bty="n")
#
# abline(0,1)
# lim <- c(min(c(dat$model_RMSE,dat$`PredErrorAOA_RMSE_95%`)),
#          max(c(dat$model_RMSE,dat$`PredErrorAOA_RMSE_95%`)))
# plot(dat$model_RMSE~dat$`PredErrorAOA_RMSE_95%`,
#      xlim=lim,ylim=lim,
#      xlab="RMSE Prediction (AOA)",ylab="model CV error",
#      main="95%")
# legend("topleft",
#        legend=paste0("ME= ",round(mean(dat$model_RMSE-dat$`PredErrorAOA_RMSE_95%`),4)),bty="n")
#
# abline(0,1)
# dev.off()
getwd()
dev.off()
dev.off()
rm(list=ls())
library(ggplot2)
library(reshape2)
dat <- get(load("../data/resultsTable_small.RData"))
means=as.data.frame(matrix(unlist(dat$meansPCA),ncol=2,byrow = T))
sds=as.data.frame(matrix(unlist(dat$sdPCA),ncol=2,byrow = T))
caseStudy <- dat[dat$npoints==50&dat$seed==10&
sds[,1]==2&sds[,2]==2&
means[,1]==3&means[,2]==-1,]
pdf("../figures/comparison_modelRuns_box.pdf",width=12,height=7)
par(mfrow=c(1,2),mar=c(7,3,1,1))
boxplot(dat$model_RMSE,dat$PredError_RMSE,
dat$`PredErrorAOA_RMSE`,
dat$`PredErrorNOTAOA_RMSE`,
names=c("CV RMSE","RMSE all", "RMSE AOA",
"RMSE !AOA"),las=2,notch=T)
boxplot(dat$model_R2,dat$PredError_R2,
dat$`PredErrorAOA_R2`,
dat$`PredErrorNOTAOA_R2`,
names=c("CV R2","R2 all", "R2 AOA",
"R2 !AOA"),las=2,notch=T)
dev.off()
pdf("../figures/comparison_modelRuns_scatter.pdf",width=7,height=3.5)
par(mfrow=c(1,2))
#lim <- c(min(c(dat$model_RMSE,dat$PredError_RMSE)),
#  max(c(dat$model_RMSE,dat$PredError_RMSE)))
#plot(dat$model_RMSE~dat$PredError_RMSE,
#     xlim=lim,ylim=lim,
#     xlab="RMSE prediction (entire study area)",ylab="RMSE model CV")
#points(caseStudy$model_RMSE~caseStudy$PredError_RMSE,col="red",pch=16)
#abline(0,1)
#legend("topleft",legend="a",bty="n")
lim <- c(min(c(dat$model_RMSE,dat$`PredErrorAOA_RMSE`)),
max(c(dat$model_RMSE,dat$`PredErrorAOA_RMSE`)))
plot(dat$model_RMSE~dat$`PredErrorAOA_RMSE`,
xlim=lim,ylim=lim,
xlab="RMSE prediction (AOA)",ylab="RMSE model CV"
#,main="AOA"
)
points(caseStudy$model_RMSE~caseStudy$`PredErrorAOA_RMSE`,col="red",pch=16)
legend("topleft",legend="a",bty="n")
abline(0,1)
lim <- c(min(c(dat$model_RMSE,dat$`PredErrorNOTAOA_RMSE`),na.rm=T),
max(c(dat$model_RMSE,dat$`PredErrorNOTAOA_RMSE`),na.rm=T))
plot(dat$model_RMSE~dat$`PredErrorNOTAOA_RMSE`,
xlim=lim,ylim=lim,
xlab="RMSE prediction (outside AOA)",ylab="RMSE model CV"
#,main="Outside AOA"
)
points(caseStudy$model_RMSE~caseStudy$`PredErrorNOTAOA_RMSE`,col="red",pch=16)
legend("topleft",legend="b",bty="n")
abline(0,1)
#mtext("How well does the model CV error reflect the true error within and outside of the AOA?",
#      side = 3, line = -1.5, outer = TRUE)
dev.off()
rm(list=ls())
library(ggplot2)
library(reshape2)
dat <- get(load("../data/resultsTable_small.RData"))
means=as.data.frame(matrix(unlist(dat$meansPCA),ncol=2,byrow = T))
sds=as.data.frame(matrix(unlist(dat$sdPCA),ncol=2,byrow = T))
caseStudy <- dat[dat$npoints==50&dat$seed==10&
sds[,1]==2&sds[,2]==2&
means[,1]==3&means[,2]==-1,]
pdf("../figures/comparison_modelRuns_box.pdf",width=12,height=7)
par(mfrow=c(1,2),mar=c(7,3,1,1))
boxplot(dat$model_RMSE,dat$PredError_RMSE,
dat$`PredErrorAOA_RMSE`,
dat$`PredErrorNOTAOA_RMSE`,
names=c("CV RMSE","RMSE all", "RMSE AOA",
"RMSE !AOA"),las=2,notch=T)
boxplot(dat$model_R2,dat$PredError_R2,
dat$`PredErrorAOA_R2`,
dat$`PredErrorNOTAOA_R2`,
names=c("CV R2","R2 all", "R2 AOA",
"R2 !AOA"),las=2,notch=T)
dev.off()
pdf("../figures/comparison_modelRuns_scatter.pdf",width=9,height=4)
par(mfrow=c(1,2))
#lim <- c(min(c(dat$model_RMSE,dat$PredError_RMSE)),
#  max(c(dat$model_RMSE,dat$PredError_RMSE)))
#plot(dat$model_RMSE~dat$PredError_RMSE,
#     xlim=lim,ylim=lim,
#     xlab="RMSE prediction (entire study area)",ylab="RMSE model CV")
#points(caseStudy$model_RMSE~caseStudy$PredError_RMSE,col="red",pch=16)
#abline(0,1)
#legend("topleft",legend="a",bty="n")
lim <- c(min(c(dat$model_RMSE,dat$`PredErrorAOA_RMSE`)),
max(c(dat$model_RMSE,dat$`PredErrorAOA_RMSE`)))
plot(dat$model_RMSE~dat$`PredErrorAOA_RMSE`,
xlim=lim,ylim=lim,
xlab="RMSE prediction (AOA)",ylab="RMSE model CV"
#,main="AOA"
)
points(caseStudy$model_RMSE~caseStudy$`PredErrorAOA_RMSE`,col="red",pch=16)
legend("topleft",legend="a",bty="n")
abline(0,1)
lim <- c(min(c(dat$model_RMSE,dat$`PredErrorNOTAOA_RMSE`),na.rm=T),
max(c(dat$model_RMSE,dat$`PredErrorNOTAOA_RMSE`),na.rm=T))
plot(dat$model_RMSE~dat$`PredErrorNOTAOA_RMSE`,
xlim=lim,ylim=lim,
xlab="RMSE prediction (outside AOA)",ylab="RMSE model CV"
#,main="Outside AOA"
)
points(caseStudy$model_RMSE~caseStudy$`PredErrorNOTAOA_RMSE`,col="red",pch=16)
legend("topleft",legend="b",bty="n")
abline(0,1)
#mtext("How well does the model CV error reflect the true error within and outside of the AOA?",
#      side = 3, line = -1.5, outer = TRUE)
dev.off()
rm(list=ls())
library(ggplot2)
library(reshape2)
dat <- get(load("../data/resultsTable_small.RData"))
means=as.data.frame(matrix(unlist(dat$meansPCA),ncol=2,byrow = T))
sds=as.data.frame(matrix(unlist(dat$sdPCA),ncol=2,byrow = T))
caseStudy <- dat[dat$npoints==50&dat$seed==10&
sds[,1]==2&sds[,2]==2&
means[,1]==3&means[,2]==-1,]
pdf("../figures/comparison_modelRuns_box.pdf",width=12,height=7)
par(mfrow=c(1,2),mar=c(7,3,1,1))
boxplot(dat$model_RMSE,dat$PredError_RMSE,
dat$`PredErrorAOA_RMSE`,
dat$`PredErrorNOTAOA_RMSE`,
names=c("CV RMSE","RMSE all", "RMSE AOA",
"RMSE !AOA"),las=2,notch=T)
boxplot(dat$model_R2,dat$PredError_R2,
dat$`PredErrorAOA_R2`,
dat$`PredErrorNOTAOA_R2`,
names=c("CV R2","R2 all", "R2 AOA",
"R2 !AOA"),las=2,notch=T)
dev.off()
pdf("../figures/comparison_modelRuns_scatter.pdf",width=9,height=5)
par(mfrow=c(1,2))
#lim <- c(min(c(dat$model_RMSE,dat$PredError_RMSE)),
#  max(c(dat$model_RMSE,dat$PredError_RMSE)))
#plot(dat$model_RMSE~dat$PredError_RMSE,
#     xlim=lim,ylim=lim,
#     xlab="RMSE prediction (entire study area)",ylab="RMSE model CV")
#points(caseStudy$model_RMSE~caseStudy$PredError_RMSE,col="red",pch=16)
#abline(0,1)
#legend("topleft",legend="a",bty="n")
lim <- c(min(c(dat$model_RMSE,dat$`PredErrorAOA_RMSE`)),
max(c(dat$model_RMSE,dat$`PredErrorAOA_RMSE`)))
plot(dat$model_RMSE~dat$`PredErrorAOA_RMSE`,
xlim=lim,ylim=lim,
xlab="RMSE prediction (AOA)",ylab="RMSE model CV"
#,main="AOA"
)
points(caseStudy$model_RMSE~caseStudy$`PredErrorAOA_RMSE`,col="red",pch=16)
legend("topleft",legend="a",bty="n")
abline(0,1)
lim <- c(min(c(dat$model_RMSE,dat$`PredErrorNOTAOA_RMSE`),na.rm=T),
max(c(dat$model_RMSE,dat$`PredErrorNOTAOA_RMSE`),na.rm=T))
plot(dat$model_RMSE~dat$`PredErrorNOTAOA_RMSE`,
xlim=lim,ylim=lim,
xlab="RMSE prediction (outside AOA)",ylab="RMSE model CV"
#,main="Outside AOA"
)
points(caseStudy$model_RMSE~caseStudy$`PredErrorNOTAOA_RMSE`,col="red",pch=16)
legend("topleft",legend="b",bty="n")
abline(0,1)
#mtext("How well does the model CV error reflect the true error within and outside of the AOA?",
#      side = 3, line = -1.5, outer = TRUE)
dev.off()
head(dat)
boxplot(dat$AOAI_R2,dat$RFSD_R2)
summary(lm(dat$AOAI_R2~dat$RFSD_R2))
plot(dat$AOAI_R2~dat$RFSD_R2)
plot(dat$AOAI_R2~dat$PredError_R2)
plot(dat$RFSD_R2_R2~dat$PredError_R2)
plot(dat$RFSD_R2~dat$PredError_R2)
3*3*3*3
81*4*3
rm(list=ls())
library(ggplot2)
library(reshape2)
dat <- get(load("../data/resultsTable.RData"))
means=as.data.frame(matrix(unlist(dat$meansPCA),ncol=2,byrow = T))
sds=as.data.frame(matrix(unlist(dat$sdPCA),ncol=2,byrow = T))
caseStudy <- dat[dat$npoints==50&dat$seed==10&
sds[,1]==2&sds[,2]==2&
means[,1]==3&means[,2]==-1,]
par(mfrow=c(1,2),mar=c(7,3,1,1))
boxplot(dat$model_RMSE,dat$PredError_RMSE,
dat$`PredErrorAOA_RMSE`,
dat$`PredErrorNOTAOA_RMSE`,
names=c("CV RMSE","RMSE all", "RMSE AOA",
"RMSE !AOA"),las=2,notch=T)
boxplot(dat$model_R2,dat$PredError_R2,
dat$`PredErrorAOA_R2`,
dat$`PredErrorNOTAOA_R2`,
names=c("CV R2","R2 all", "R2 AOA",
"R2 !AOA"),las=2,notch=T)
par(mfrow=c(1,2))
lim <- c(min(c(dat$model_RMSE,dat$`PredErrorAOA_RMSE`)),
max(c(dat$model_RMSE,dat$`PredErrorAOA_RMSE`)))
plot(dat$model_RMSE~dat$`PredErrorAOA_RMSE`,
xlim=lim,ylim=lim,
xlab="RMSE prediction (AOA)",ylab="RMSE model CV"
#,main="AOA"
)
points(caseStudy$model_RMSE~caseStudy$`PredErrorAOA_RMSE`,col="red",pch=16)
legend("topleft",legend="a",bty="n")
abline(0,1)
lim <- c(min(c(dat$model_RMSE,dat$`PredErrorNOTAOA_RMSE`),na.rm=T),
max(c(dat$model_RMSE,dat$`PredErrorNOTAOA_RMSE`),na.rm=T))
plot(dat$model_RMSE~dat$`PredErrorNOTAOA_RMSE`,
xlim=lim,ylim=lim,
xlab="RMSE prediction (outside AOA)",ylab="RMSE model CV"
#,main="Outside AOA"
)
points(caseStudy$model_RMSE~caseStudy$`PredErrorNOTAOA_RMSE`,col="red",pch=16)
legend("topleft",legend="b",bty="n")
abline(0,1)
rm(list=ls())
library(ggplot2)
library(reshape2)
dat <- get(load("../data/resultsTable.RData"))
means=as.data.frame(matrix(unlist(dat$meansPCA),ncol=2,byrow = T))
sds=as.data.frame(matrix(unlist(dat$sdPCA),ncol=2,byrow = T))
caseStudy <- dat[dat$npoints==50&dat$seed==10&
sds[,1]==2&sds[,2]==2&
means[,1]==3&means[,2]==-1,]
pdf("../figures/comparison_modelRuns_box.pdf",width=12,height=7)
par(mfrow=c(1,2),mar=c(7,3,1,1))
boxplot(dat$model_RMSE,dat$PredError_RMSE,
dat$`PredErrorAOA_RMSE`,
dat$`PredErrorNOTAOA_RMSE`,
names=c("CV RMSE","RMSE all", "RMSE AOA",
"RMSE !AOA"),las=2,notch=T)
boxplot(dat$model_R2,dat$PredError_R2,
dat$`PredErrorAOA_R2`,
dat$`PredErrorNOTAOA_R2`,
names=c("CV R2","R2 all", "R2 AOA",
"R2 !AOA"),las=2,notch=T)
dev.off()
pdf("../figures/comparison_modelRuns_scatter.pdf",width=9,height=5)
par(mfrow=c(1,2))
#lim <- c(min(c(dat$model_RMSE,dat$PredError_RMSE)),
#  max(c(dat$model_RMSE,dat$PredError_RMSE)))
#plot(dat$model_RMSE~dat$PredError_RMSE,
#     xlim=lim,ylim=lim,
#     xlab="RMSE prediction (entire study area)",ylab="RMSE model CV")
#points(caseStudy$model_RMSE~caseStudy$PredError_RMSE,col="red",pch=16)
#abline(0,1)
#legend("topleft",legend="a",bty="n")
lim <- c(min(c(dat$model_RMSE,dat$`PredErrorAOA_RMSE`)),
max(c(dat$model_RMSE,dat$`PredErrorAOA_RMSE`)))
plot(dat$model_RMSE~dat$`PredErrorAOA_RMSE`,
xlim=lim,ylim=lim,
xlab="RMSE prediction (AOA)",ylab="RMSE model CV"
#,main="AOA"
)
points(caseStudy$model_RMSE~caseStudy$`PredErrorAOA_RMSE`,col="red",pch=16)
legend("topleft",legend="a",bty="n")
abline(0,1)
lim <- c(min(c(dat$model_RMSE,dat$`PredErrorNOTAOA_RMSE`),na.rm=T),
max(c(dat$model_RMSE,dat$`PredErrorNOTAOA_RMSE`),na.rm=T))
plot(dat$model_RMSE~dat$`PredErrorNOTAOA_RMSE`,
xlim=lim,ylim=lim,
xlab="RMSE prediction (outside AOA)",ylab="RMSE model CV"
#,main="Outside AOA"
)
points(caseStudy$model_RMSE~caseStudy$`PredErrorNOTAOA_RMSE`,col="red",pch=16)
legend("topleft",legend="b",bty="n")
abline(0,1)
#mtext("How well does the model CV error reflect the true error within and outside of the AOA?",
#      side = 3, line = -1.5, outer = TRUE)
dev.off()
